    ____  _________    ____  __  _________
   / __ \/ ____/   |  / __ \/  |/  / ____/
  / /_/ / __/ / /| | / / / / /|_/ / __/   
 / _, _/ /___/ ___ |/ /_/ / /  / / /___   
/_/ |_/_____/_/  |_/_____/_/  /_/_____/   
                                          

 Compile: 
    elm-start.sh : build boilerplate for elm project
    compile.sh   : a script to run the Elm compiler
    go.sh        : a script to run python3 server

 Usage:
    > ./elm-start.sh elm-foo
    0/ create a directory at </Users/pr/work/code/elm/elm-hacks/elm-foo>
    1/ build DOC skeleton
       cp template
    2/ move to dir </Users/pr/work/code/elm/elm-hacks/elm-foo>
    3/ setup git
    Initialized empty Git repository in /Users/pr/work/code/elm/elm-hacks/elm-foo/.git/
    4/ setup elm
    Hello! Elm projects always start with an elm.json file. I can create them!

    Now you may be wondering, what will be in this file? How do I add Elm files to
    my project? How do I see it in the browser? How will my code grow? Do I need
    more directories? What about tests? Etc.

    Check out <https://elm-lang.org/0.19.1/init> for all the answers!

    Knowing all that, would you like me to create an elm.json file now? [Y/n]: y
    Okay, I created it. Now read that link!
    5/ add to git... first checkin
    [master (root-commit) 7b5e230] Initial Checkin for elm-foo
    7 files changed, 79 insertions(+)
    create mode 100644 BUGS
    create mode 100644 README
    create mode 100644 TODO
    create mode 100644 elm.json
    create mode 100644 favicon.png
    create mode 100644 index.html
    create mode 100644 src/Main.elm
    commit 7b5e230de592ee94f5661e103fa8f17921a5af94 (HEAD -> master)
    Author: Peter Renshaw <sldfkjsdf@sdfsdfsvsdq.com>
    Date:   Thu Aug 13 22:47:19 2020 +1000

    Initial Checkin for elm-foo
    On branch master
    Untracked files:
      (use "git add <file>..." to include in what will be committed)

	compile.sh

    nothing added to commit but untracked files present (use "git add" to track)
    5/ start coding
    -rw-r--r--@ 1 pr  staff   162 13 Aug 22:47 BUGS
    -rw-r--r--@ 1 pr  staff   259 13 Aug 22:47 README
    -rw-r--r--@ 1 pr  staff   130 13 Aug 22:47 TODO
    -rwxr--r--  1 pr  staff   528 13 Aug 22:47 compile.sh
    -rw-r--r--  1 pr  staff   517 13 Aug 22:47 elm.json
    -rw-r--r--  1 pr  staff  7980 13 Aug 22:47 favicon.png
    -rw-r--r--  1 pr  staff   345 13 Aug 22:47 index.html

    src:
    total 8
    drwxr-xr-x   3 pr  staff   96 13 Aug 22:47 .
    drwxr-xr-x  11 pr  staff  352 13 Aug 22:47 ..
    -rw-r--r--@  1 pr  staff  192 13 Aug 22:47 Main.elm

    > cd elm-foo
    $  

2020AUG24
* todo
- added type declaration to main, src/Main.elm
- testing

* addressing a big problem of boilerplate code
- every reference you look at is a simplified version
  of the changes I've made to /template/Main.elm
- A bias here is I'll be using elm-ui so things are
  being set up so code for apps compile quicker
- source: Practical Elm, P92-95


2020AUG21
* add template/Main.elm

* added template/go.sh
- run a python3 http.server
- defaults to port 5000

2020AUG18
* modified src/Main.elm
- added CONST

2020AUG12
* template must be captured
- there's a duplication of files (compile.sh)
- needs to be there
- why template/src/Main.elm not captured?

* order of src/Main.elm 
- make main first

2020AUG11
* added favicon

2020AUG10
* new order src/Main.elm
    -- TYPES
    -- MODEL
    -- FUNCS
    -- INIT
    -- SUBSCRIPTIONS
    -- UPDATE
    -- VIEW
    -- MAIN


* add SUBSCRIPTIONS to src/Main.elm 

* now building as I want
* changed template to replicate structure I want in projects
  
  BUGS
  compile.sh
  index.html
  README
  src
      Main.elm
  TODO

* add compile.sh to template

* rewrote elm-start.sh
- includes template dir
- template dir should be in root

2020AUG07
* initail checkin
